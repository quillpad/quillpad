name: Android Build Release

on:
  push:
    tags:
      - v*
    branches: 
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
      with:
        add-job-summary-as-pr-comment: on-failure # Valid values are 'never' (default), 'always', and 'on-failure'
        build-scan-publish: true
        build-scan-terms-of-use-url: "https://gradle.com/terms-of-service"
        build-scan-terms-of-use-agree: "yes"

    - name: Setup keystore
      run: |
        echo "${{secrets.KEYSTORE}}" > keystore.jks.asc
        gpg -d --batch --passphrase "${{secrets.GPG_PASS}}" --output app/keystore.jks keystore.jks.asc

    - name: Build App
      run: |
        chmod +x gradlew
        ./gradlew assembleRelease \
            -Pkeystore=keystore.jks \
            -Pstorepass=${{secrets.STORE_PASS}} \
            -Pkeypass=${{secrets.KEY_PASS}} \
            -Pkeyalias=${{secrets.KEY_NAME}}

    - name: Build App Bundle
      if: ${{ github.ref_type == 'tag' }}
      run: |
        chmod +x gradlew
        ./gradlew bundleRelease \
            -Pkeystore=keystore.jks \
            -Pstorepass=${{secrets.STORE_PASS}} \
            -Pkeypass=${{secrets.KEY_PASS}} \
            -Pkeyalias=${{secrets.KEY_NAME}}

    - name: Delete keystore
      run: rm -f keystore.jks keystore.jks.asc

    - name: Archive APK
      uses: actions/upload-artifact@v4
      with:
        name: Archive Quillpad APK
        path: app/build/outputs/apk/release/app-release.apk

    - name: Archive Bundle
      if: ${{ github.ref_type == 'tag' }}
      uses: actions/upload-artifact@v4
      with:
        name: Google PlayStore Bundle
        path: app/build/outputs/bundle/release/app-release.aab

    - name: Archive ProGuard Mapping
      if: ${{ github.ref_type == 'tag' }}
      uses: actions/upload-artifact@v4
      with:
        name: ProGuard Mapping File
        path: app/build/outputs/mapping/release/mapping.txt

    - name: Rename app to release version
      if: ${{ github.ref_type == 'tag' }}
      env: 
        VERSION: ${{ github.ref_name }}
      run: |
        echo version = ${VERSION:1}
        echo "APK_VERSION=${VERSION:1}" >> $GITHUB_ENV
        cp -v app/build/outputs/apk/release/app-release.apk quillpad-${VERSION:1}.apk

    - name: Do Release
      uses: softprops/action-gh-release@v2
      if: ${{ github.ref_type == 'tag' }}
      with:
        files: quillpad-${{env.APK_VERSION}}.apk
        draft: true

  test_lab:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          add-job-summary-as-pr-comment: on-failure
          build-scan-publish: true
          build-scan-terms-of-use-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-use-agree: "yes"

      - name: Setup keystore
        run: |
          echo "${{secrets.KEYSTORE}}" > keystore.jks.asc
          gpg -d --batch --passphrase "${{secrets.GPG_PASS}}" --output app/keystore.jks keystore.jks.asc

      - name: Build Test APK
        run: |
          chmod +x gradlew
          ./gradlew assembleRelease -PTESTLAB_BUILD=true \
              -Pkeystore=keystore.jks \
              -Pstorepass=${{secrets.STORE_PASS}} \
              -Pkeypass=${{secrets.KEY_PASS}} \
              -Pkeyalias=${{secrets.KEY_NAME}}

      - name: Delete keystore
        run: rm -f app/keystore.jks keystore.jks.asc

      - name: Archive Test APK
        uses: actions/upload-artifact@v4
        with:
          name: Test APK
          path: app/build/outputs/apk/release/app-release.apk

      - name: Setup Google Cloud Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Run Firebase Test Lab Tests
        run: |
          gcloud firebase test android run \
            --type robo \
            --app app/build/outputs/apk/release/app-release.apk \
            --device=model=MediumPhone.arm,version=35 \
            --device=model=MediumPhone.arm,version=26 \
            --results-dir=test-results

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-lab-results
          path: test-results/
